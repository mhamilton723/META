-0.263 (+/-0.004) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 10, 'regressor__max_depth': None, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.257 (+/-0.008) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 50, 'regressor__max_depth': None, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.250 (+/-0.006) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 100, 'regressor__max_depth': None, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.246 (+/-0.008) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 200, 'regressor__max_depth': None, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.245 (+/-0.006) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 400, 'regressor__max_depth': None, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.359 (+/-0.005) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 10, 'regressor__max_depth': 2, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.353 (+/-0.007) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 50, 'regressor__max_depth': 2, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.339 (+/-0.000) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 100, 'regressor__max_depth': 2, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.350 (+/-0.005) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 200, 'regressor__max_depth': 2, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.346 (+/-0.004) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 400, 'regressor__max_depth': 2, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.306 (+/-0.002) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 10, 'regressor__max_depth': 3, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.308 (+/-0.002) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 50, 'regressor__max_depth': 3, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.315 (+/-0.005) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 100, 'regressor__max_depth': 3, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.310 (+/-0.006) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 200, 'regressor__max_depth': 3, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.307 (+/-0.002) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 400, 'regressor__max_depth': 3, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.292 (+/-0.009) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 10, 'regressor__max_depth': 4, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.272 (+/-0.006) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 50, 'regressor__max_depth': 4, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.279 (+/-0.000) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 100, 'regressor__max_depth': 4, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.278 (+/-0.001) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 200, 'regressor__max_depth': 4, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.282 (+/-0.004) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 400, 'regressor__max_depth': 4, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.270 (+/-0.003) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 10, 'regressor__max_depth': 5, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.263 (+/-0.007) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 50, 'regressor__max_depth': 5, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.262 (+/-0.007) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 100, 'regressor__max_depth': 5, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.260 (+/-0.006) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 200, 'regressor__max_depth': 5, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.256 (+/-0.009) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 400, 'regressor__max_depth': 5, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.262 (+/-0.001) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 10, 'regressor__max_depth': None, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.256 (+/-0.004) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 50, 'regressor__max_depth': None, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.250 (+/-0.004) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 100, 'regressor__max_depth': None, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.251 (+/-0.008) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 200, 'regressor__max_depth': None, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.251 (+/-0.011) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 400, 'regressor__max_depth': None, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.338 (+/-0.006) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 10, 'regressor__max_depth': 2, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.358 (+/-0.003) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 50, 'regressor__max_depth': 2, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.343 (+/-0.004) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 100, 'regressor__max_depth': 2, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.344 (+/-0.004) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 200, 'regressor__max_depth': 2, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.352 (+/-0.004) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 400, 'regressor__max_depth': 2, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.301 (+/-0.003) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 10, 'regressor__max_depth': 3, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.316 (+/-0.004) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 50, 'regressor__max_depth': 3, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.313 (+/-0.004) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 100, 'regressor__max_depth': 3, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.314 (+/-0.001) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 200, 'regressor__max_depth': 3, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.312 (+/-0.002) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 400, 'regressor__max_depth': 3, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.294 (+/-0.006) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 10, 'regressor__max_depth': 4, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.286 (+/-0.006) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 50, 'regressor__max_depth': 4, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.289 (+/-0.006) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 100, 'regressor__max_depth': 4, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.287 (+/-0.004) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 200, 'regressor__max_depth': 4, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.289 (+/-0.006) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 400, 'regressor__max_depth': 4, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.281 (+/-0.010) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 10, 'regressor__max_depth': 5, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.261 (+/-0.008) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 50, 'regressor__max_depth': 5, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.268 (+/-0.009) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 100, 'regressor__max_depth': 5, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.272 (+/-0.007) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 200, 'regressor__max_depth': 5, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.274 (+/-0.008) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 400, 'regressor__max_depth': 5, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.222 (+/-0.006) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 10, 'regressor__max_depth': None, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.234 (+/-0.005) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 50, 'regressor__max_depth': None, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.233 (+/-0.013) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 100, 'regressor__max_depth': None, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.229 (+/-0.011) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 200, 'regressor__max_depth': None, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.228 (+/-0.007) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 400, 'regressor__max_depth': None, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.347 (+/-0.005) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 10, 'regressor__max_depth': 2, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.354 (+/-0.001) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 50, 'regressor__max_depth': 2, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.351 (+/-0.002) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 100, 'regressor__max_depth': 2, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.354 (+/-0.007) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 200, 'regressor__max_depth': 2, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.350 (+/-0.006) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 400, 'regressor__max_depth': 2, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.301 (+/-0.003) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 10, 'regressor__max_depth': 3, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.310 (+/-0.004) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 50, 'regressor__max_depth': 3, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.311 (+/-0.005) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 100, 'regressor__max_depth': 3, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.307 (+/-0.001) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 200, 'regressor__max_depth': 3, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.311 (+/-0.000) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 400, 'regressor__max_depth': 3, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.285 (+/-0.009) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 10, 'regressor__max_depth': 4, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.278 (+/-0.001) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 50, 'regressor__max_depth': 4, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.287 (+/-0.002) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 100, 'regressor__max_depth': 4, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.272 (+/-0.002) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 200, 'regressor__max_depth': 4, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.278 (+/-0.003) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 400, 'regressor__max_depth': 4, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.242 (+/-0.012) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 10, 'regressor__max_depth': 5, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.251 (+/-0.007) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 50, 'regressor__max_depth': 5, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.260 (+/-0.000) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 100, 'regressor__max_depth': 5, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.254 (+/-0.007) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 200, 'regressor__max_depth': 5, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.258 (+/-0.006) for {'regressor__algorithm': RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,
           max_features='auto', max_leaf_nodes=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,
           verbose=0, warm_start=False), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__n_estimators': 400, 'regressor__max_depth': 5, 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.294 (+/-0.015) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.01, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.333 (+/-0.003) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.001, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.381 (+/-0.002) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.0001, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.461 (+/-0.002) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 1e-05, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.315 (+/-0.004) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.01, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.379 (+/-0.001) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.001, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.459 (+/-0.002) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.0001, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.466 (+/-0.002) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 1e-05, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.369 (+/-0.001) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.01, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.451 (+/-0.005) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.001, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.454 (+/-0.001) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.0001, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.454 (+/-0.000) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 1e-05, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.305 (+/-0.009) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.01, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.335 (+/-0.005) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.001, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.385 (+/-0.003) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.0001, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.457 (+/-0.002) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 1e-05, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.312 (+/-0.001) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.01, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.384 (+/-0.003) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.001, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.456 (+/-0.002) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.0001, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.465 (+/-0.002) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 1e-05, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.367 (+/-0.005) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.01, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.452 (+/-0.005) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.001, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.454 (+/-0.001) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.0001, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.454 (+/-0.000) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 1e-05, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.288 (+/-0.009) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.01, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.324 (+/-0.007) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.001, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.377 (+/-0.008) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.0001, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.451 (+/-0.000) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 1e-05, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.290 (+/-0.001) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.01, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.381 (+/-0.008) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.001, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.450 (+/-0.001) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.0001, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.465 (+/-0.002) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 1e-05, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.362 (+/-0.005) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.01, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.441 (+/-0.007) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.001, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.455 (+/-0.002) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.0001, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.454 (+/-0.000) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='rbf',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 1e-05, 'regressor__kernel': 'rbf', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.374 (+/-0.001) for {'regressor__algorithm': KernelRidge(alpha=1, coef0=1, degree=4, gamma=None, kernel='poly',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'regressor__degree': 2, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__kernel': 'poly', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.511 (+/-0.018) for {'regressor__algorithm': KernelRidge(alpha=1, coef0=1, degree=4, gamma=None, kernel='poly',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'regressor__degree': 3, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__kernel': 'poly', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.561 (+/-0.021) for {'regressor__algorithm': KernelRidge(alpha=1, coef0=1, degree=4, gamma=None, kernel='poly',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'regressor__degree': 4, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__kernel': 'poly', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.300 (+/-0.004) for {'regressor__algorithm': KernelRidge(alpha=1, coef0=1, degree=4, gamma=None, kernel='poly',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'regressor__degree': 2, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__kernel': 'poly', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.282 (+/-0.002) for {'regressor__algorithm': KernelRidge(alpha=1, coef0=1, degree=4, gamma=None, kernel='poly',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'regressor__degree': 3, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__kernel': 'poly', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.281 (+/-0.006) for {'regressor__algorithm': KernelRidge(alpha=1, coef0=1, degree=4, gamma=None, kernel='poly',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'regressor__degree': 4, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__kernel': 'poly', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.385 (+/-0.012) for {'regressor__algorithm': KernelRidge(alpha=1, coef0=1, degree=4, gamma=None, kernel='poly',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'regressor__degree': 2, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__kernel': 'poly', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.516 (+/-0.027) for {'regressor__algorithm': KernelRidge(alpha=1, coef0=1, degree=4, gamma=None, kernel='poly',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'regressor__degree': 3, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__kernel': 'poly', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.574 (+/-0.032) for {'regressor__algorithm': KernelRidge(alpha=1, coef0=1, degree=4, gamma=None, kernel='poly',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'regressor__degree': 4, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__kernel': 'poly', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.316 (+/-0.001) for {'regressor__algorithm': KernelRidge(alpha=1, coef0=1, degree=4, gamma=None, kernel='poly',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'regressor__degree': 2, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__kernel': 'poly', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.295 (+/-0.002) for {'regressor__algorithm': KernelRidge(alpha=1, coef0=1, degree=4, gamma=None, kernel='poly',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'regressor__degree': 3, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__kernel': 'poly', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.297 (+/-0.002) for {'regressor__algorithm': KernelRidge(alpha=1, coef0=1, degree=4, gamma=None, kernel='poly',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'regressor__degree': 4, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__kernel': 'poly', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.358 (+/-0.008) for {'regressor__algorithm': KernelRidge(alpha=1, coef0=1, degree=4, gamma=None, kernel='poly',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'regressor__degree': 2, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__kernel': 'poly', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.504 (+/-0.031) for {'regressor__algorithm': KernelRidge(alpha=1, coef0=1, degree=4, gamma=None, kernel='poly',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'regressor__degree': 3, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__kernel': 'poly', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.568 (+/-0.031) for {'regressor__algorithm': KernelRidge(alpha=1, coef0=1, degree=4, gamma=None, kernel='poly',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'regressor__degree': 4, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__kernel': 'poly', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.303 (+/-0.004) for {'regressor__algorithm': KernelRidge(alpha=1, coef0=1, degree=4, gamma=None, kernel='poly',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'regressor__degree': 2, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__kernel': 'poly', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.306 (+/-0.004) for {'regressor__algorithm': KernelRidge(alpha=1, coef0=1, degree=4, gamma=None, kernel='poly',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'regressor__degree': 3, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__kernel': 'poly', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.308 (+/-0.000) for {'regressor__algorithm': KernelRidge(alpha=1, coef0=1, degree=4, gamma=None, kernel='poly',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'regressor__degree': 4, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__kernel': 'poly', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.401 (+/-0.004) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.01, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.460 (+/-0.023) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.606 (+/-0.014) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.0001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.699 (+/-0.008) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 1e-05, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.359 (+/-0.010) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.01, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.359 (+/-0.001) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.448 (+/-0.002) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.0001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.465 (+/-0.002) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 1e-05, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.895 (+/-0.238) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.01, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.606 (+/-0.014) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.699 (+/-0.008) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.0001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.718 (+/-0.010) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 1e-05, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.370 (+/-0.005) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.01, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.447 (+/-0.004) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.464 (+/-0.002) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.0001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.466 (+/-0.001) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 1e-05, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.607 (+/-0.014) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.01, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.699 (+/-0.008) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.718 (+/-0.010) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.0001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.719 (+/-0.010) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 1e-05, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.440 (+/-0.005) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.01, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.452 (+/-0.002) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.455 (+/-0.002) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.0001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.455 (+/-0.001) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 1e-05, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.656 (+/-0.106) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.01, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.457 (+/-0.021) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.610 (+/-0.013) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.0001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.698 (+/-0.008) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 1e-05, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-1.006 (+/-0.272) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.01, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.349 (+/-0.004) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.440 (+/-0.002) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.0001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.464 (+/-0.002) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 1e-05, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.545 (+/-0.066) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.01, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.610 (+/-0.013) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.698 (+/-0.008) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.0001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.718 (+/-0.010) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 1e-05, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.352 (+/-0.003) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.01, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.440 (+/-0.003) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.463 (+/-0.002) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.0001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.466 (+/-0.001) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 1e-05, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.610 (+/-0.013) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.01, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.698 (+/-0.008) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.718 (+/-0.010) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.0001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.719 (+/-0.010) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 1e-05, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.435 (+/-0.004) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.01, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.452 (+/-0.002) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.455 (+/-0.002) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.0001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.455 (+/-0.001) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 1e-05, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-6.483 (+/-3.018) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.01, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.459 (+/-0.026) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.588 (+/-0.012) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.0001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.695 (+/-0.008) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 1e-05, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.628 (+/-0.010) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.01, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.341 (+/-0.001) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.441 (+/-0.001) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 0.0001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.464 (+/-0.002) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__gamma': 1e-05, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-1.997 (+/-0.763) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.01, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.588 (+/-0.012) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.695 (+/-0.008) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.0001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.717 (+/-0.010) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 1e-05, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.324 (+/-0.011) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.01, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.442 (+/-0.001) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.462 (+/-0.002) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 0.0001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.466 (+/-0.001) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__gamma': 1e-05, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.589 (+/-0.011) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.01, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.695 (+/-0.008) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.717 (+/-0.010) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.0001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.719 (+/-0.010) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 1e-05, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 0}
-0.425 (+/-0.005) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.01, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.451 (+/-0.002) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.455 (+/-0.001) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 0.0001, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.455 (+/-0.001) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=1e-05, kernel='sigmoid',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__gamma': 1e-05, 'regressor__kernel': 'sigmoid', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True), 'regressor__coef0': 1}
-0.405 (+/-0.001) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=None, kernel='linear',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__kernel': 'linear', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.407 (+/-0.000) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=None, kernel='linear',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__kernel': 'linear', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.408 (+/-0.004) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=None, kernel='linear',
      kernel_params=None), 'dim_reducer__n_components': 10, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__kernel': 'linear', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.430 (+/-0.007) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=None, kernel='linear',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__kernel': 'linear', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.428 (+/-0.009) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=None, kernel='linear',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__kernel': 'linear', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.434 (+/-0.008) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=None, kernel='linear',
      kernel_params=None), 'dim_reducer__n_components': 15, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__kernel': 'linear', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.417 (+/-0.005) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=None, kernel='linear',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 0.1, 'regressor__kernel': 'linear', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.415 (+/-0.006) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=None, kernel='linear',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 1, 'regressor__kernel': 'linear', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
-0.419 (+/-0.013) for {'regressor__algorithm': KernelRidge(alpha=10, coef0=1, degree=3, gamma=None, kernel='linear',
      kernel_params=None), 'dim_reducer__n_components': 21, 'imputer__algorithm': Imputer(axis=0, copy=True, missing_values=-99, strategy='mean', verbose=0), 'imputer__strategy': 'mean', 'dim_reducer__whiten': True, 'dim_reducer__copy': True, 'imputer__missing_values': -99, 'scaler__algorithm': StandardScaler(copy=True, with_mean=True, with_std=True), 'regressor__alpha': 10, 'regressor__kernel': 'linear', 'dim_reducer__algorithm': PCA(copy=True, n_components=21, whiten=True)}
